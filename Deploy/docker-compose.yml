#Docker compose for VPS

version: '3.9'
services:
  mssqldb:
    network_mode: "host"
    restart: always
    user: root
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MS_SQL_PASS}
    ports:
      - "1434:1433"
    volumes:
      - data:/var/opt/mssql/data
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -U sa -P ${MS_SQL_PASS} -Q 'SELECT 1'
      interval: 30s
      timeout: 10s
      retries: 5
  web-api:
    network_mode: "host"
    user: root
    image: milease/camai-backend:camai-web-api
    ports:
      - "8090:8080"
      - "8091:8081"
    environment:
      - TZ=Antarctica/Davis
      - ConnectionStrings__Default=${MS_SQL_CONN}
      - RabbitMq__HostName=${RABBITMQ_HOST}
      - RabbitMq__Username=${RABBITMQ_USER}
      - RabbitMq__Password=${RABBITMQ_PASS}
      - RabbitMq__Port=${RABBITMQ_PORT}
      - Email__Email=${EMAIL_EMAIL}
      - Email__Password=${EMAIL_PASS}
      - Email__DisplayName=${EMAIL_NAME}
      - Email__Host=${EMAIL_HOST}
      - Email__Port=${EMAIL_PORT}
      - ASPNETCORE_ENVIRONMENT=${STAGE}
      - ImageConfiguration__BaseImageFolderPath=${BASE_IMAGE_FOLER}
      - ImageConfiguration__MaxImageSize=${MAX_IMAGE_SIZE}
      - ImageConfiguration__HostingUri=${HOST_URI}
    depends_on:
      mssqldb:
        condition: service_healthy
      camai-rabbitmq:
        condition: service_healthy
    volumes:
      - camai-web-api:${BASE_IMAGE_FOLER}
  camai-rabbitmq:
    network_mode: "host"
    image: rabbitmq:3.12.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
    volumes:
      - camai-rabbitmq-lib:/var/camai/lib/rabbitmq/
      - camai-rabbitmq-log:/var/camai/log/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  data:
  camai-rabbitmq-lib:
  camai-rabbitmq-log:
  camai-web-api:
