trigger:
- main

pool:
  name: 'Camai-Agent'

variables:
- group: docker

steps:
- task: Docker@2
  displayName: 'Docker build and publish'
  inputs:
    containerRegistry: 'camai-hub'
    repository: 'milease/camai-backend'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    buildContext: './CamAISolution'
    tags: 'camai-web-api'
- script: |
    echo "MS_SQL_PASS=$(docker.compose.MS_SQL_PASS)" > .env
    echo "MS_SQL_CONN=$(docker.compose.MS_SQL_CONN)" >> .env
    echo "STAGE=$(docker.compose.STAGE)" >> .env
    echo "RABBITMQ_USER=$(docker.compose.RABBITMQ_USER)" >> .env
    echo "RABBITMQ_PASS=$(docker.compose.RABBITMQ_PASS)" >> .env
    echo "RABBITMQ_HOST=$(docker.compose.RABBITMQ_HOST)" >> .env
    echo "RABBITMQ_PORT=$(docker.compose.RABBITMQ_PORT)" >> .env
    echo "EMAIL_EMAIL=$(docker.compose.EMAIL_EMAIL)" >> .env
    echo "EMAIL_PASS=$(docker.compose.EMAIL_PASS)" >> .env
    echo "EMAIL_NAME=$(docker.compose.EMAIL_NAME)" >> .env
    echo "EMAIL_HOST=$(docker.compose.EMAIL_HOST)" >> .env
    echo "EMAIL_PORT=$(docker.compose.EMAIL_PORT)" >> .env
    echo "GOOGLE_SERVICE_PRIVATE_KEY=$(docker.compose.GOOGLE_SERVICE_PRIVATE_KEY)" >> .env
    echo "BASE_IMAGE_FOLER=$(docker.compose.BASE_IMAGE_FOLER)" >> .env
    echo "MAX_IMAGE_SIZE=$(docker.compose.MAX_IMAGE_SIZE)" >> .env
    echo "HOST_URI=$(docker.compose.HOST_URI)" >> .env
  displayName: 'Write .env'
  
- task: CopyFilesOverSSH@0
  displayName: 'Copy files'
  inputs:
    sshEndpoint: 'ssh-server'
    contents: |
      .env
      ./Deploy/docker-compose.yml
    targetFolder: 'backend'
    readyTimeout: '20000'

- task: SSH@0
  displayName: 'Pull and run image'
  inputs:
    sshEndpoint: 'ssh-server'
    runOptions: 'inline'
    inline: |
      cd backend
      mv Deploy/*yml .
      rmdir Deploy
      docker logout
      echo $(docker.password) | docker login -u $(docker.username) --password-stdin 2>&1
      docker compose down web-api 2>&1
      docker rmi milease/camai-backend:camai-web-api 2>&1
      docker rmi $(docker images | grep "none" | awk '{print $3}' )
      docker compose up -d --quiet-pull 2>&1
      docker logout
    readyTimeout: '20000'
